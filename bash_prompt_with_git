if [ -z "$PS1" ]; then
   return
fi

# taken from zsh function VCS_INFO_git_getaction
function _git_getaction {
    local gitaction='' gitdir=$1
    local tmp

    for tmp in "${gitdir}/rebase-apply" \
               "${gitdir}/rebase"       \
               "${gitdir}/../.dotest" ; do
        if [[ -d ${tmp} ]] ; then
            if   [[ -f "${tmp}/rebasing" ]] ; then
                gitaction="rebase"
            elif [[ -f "${tmp}/applying" ]] ; then
                gitaction="am"
            else
                gitaction="am/rebase"
            fi
            printf '%s' ${gitaction}
            return 0
        fi
    done

    for tmp in "${gitdir}/rebase-merge/interactive" \
               "${gitdir}/.dotest-merge/interactive" ; do
        if [[ -f "${tmp}" ]] ; then
            printf '%s' "rebase-i"
            return 0
        fi
    done

    for tmp in "${gitdir}/rebase-merge" \
               "${gitdir}/.dotest-merge" ; do
        if [[ -d "${tmp}" ]] ; then
            printf '%s' "rebase-m"
            return 0
        fi
    done

    if [[ -f "${gitdir}/MERGE_HEAD" ]] ; then
        printf '%s' "merge"
        return 0
    fi

    if [[ -f "${gitdir}/BISECT_LOG" ]] ; then
        printf '%s' "bisect"
        return 0
    fi
    return 1
}

# taken from http://d.hatena.ne.jp/uasi/20091025/1256458798
function _git_branch_status {
    if [[ "$PWD" =~ '/\.git(/.*)?$' ]]; then
        return
    fi
    local name=`git branch 2> /dev/null | grep '^\*' | cut -b 3-`
    if [[ -z $name ]]; then
        return
    fi
    local gitdir=`git rev-parse --git-dir 2> /dev/null`
    local action=`_git_getaction "$gitdir"`
    [[ -n $action ]] && action="($action)"
    local st=`git status 2> /dev/null`
    if [[ -n `echo "$st" | grep "^nothing to"` ]]; then
        local color="\033[00;32m" # green
    elif [[ -n `echo "$st" | grep "^nothing added"` ]]; then
        local color="\033[01;33m" # yellow
    elif [[ -n `echo "$st" | grep "^# Untracked"` ]]; then
        local color="\033[00;31m" # red
    else
        local color="\033[00;31m"
    fi

    echo -e "\033[00m[$color$name$action\033[00m]"
}

case "$TERM" in
    xterm-color)
  PS1='\[\033[00;36m\]\t \[\033[00;31m\]\u\[\033[00m\]:\[\033[00;34m\]\w$(_git_branch_status)\n\[\033[00m\]\$ ';;
    *)
  PS1='\h:\W \u\$ ';;
esac
